generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// criando uma agenda para barbearias e salões de beleza
model User {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  phone     String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Schedule  Schedule[] // a agenda do usuário

  @@map("users")
}

model Barber {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  phone     String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Schedule  Schedule[] // a agenda do barbeiro
  Address   Address[]

  @@map("barbers")
}

// serviços oferecidos pela barbearia
model Service {
  id        String     @id @default(cuid())
  name      String
  price     Float
  duration  Int // duração do serviço em minutos
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Schedule  Schedule[]

  @@map("services")
}

// enderço da barbearia
model Address {
  id        String   @id @default(cuid())
  street    String
  number    String
  city      String
  state     String
  barber    Barber   @relation(fields: [barberId], references: [id], onDelete: Cascade)
  barberId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("addresses")
}

model Schedule {
  id        String   @id @default(cuid())
  date      DateTime
  color     String?
  icon      String?
  barber    Barber   @relation(fields: [barberId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  service   Service  @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  userId    String
  barberId  String
  serviceId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("schedules")
}
